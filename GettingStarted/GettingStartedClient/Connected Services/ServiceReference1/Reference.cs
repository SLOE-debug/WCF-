//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace GettingStartedClient.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Student", Namespace="http://schemas.datacontract.org/2004/07/GettingStarted")]
    [System.SerializableAttribute()]
    public partial class Student : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int age {
            get {
                return this.ageField;
            }
            set {
                if ((this.ageField.Equals(value) != true)) {
                    this.ageField = value;
                    this.RaisePropertyChanged("age");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.ICalculatorDuplex", CallbackContract=typeof(GettingStartedClient.ServiceReference1.ICalculatorDuplexCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface ICalculatorDuplex {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ICalculatorDuplex/Clear")]
        void Clear();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ICalculatorDuplex/Clear")]
        System.Threading.Tasks.Task ClearAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculatorDuplex/AddTo", ReplyAction="http://tempuri.org/ICalculatorDuplex/AddToResponse")]
        GettingStartedClient.ServiceReference1.AddToResponse AddTo(GettingStartedClient.ServiceReference1.AddToRequest request);
        
        // CODEGEN: 正在生成消息协定，应为该操作具有多个返回值。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculatorDuplex/AddTo", ReplyAction="http://tempuri.org/ICalculatorDuplex/AddToResponse")]
        System.Threading.Tasks.Task<GettingStartedClient.ServiceReference1.AddToResponse> AddToAsync(GettingStartedClient.ServiceReference1.AddToRequest request);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ICalculatorDuplex/SubtractFrom")]
        void SubtractFrom(double n);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ICalculatorDuplex/SubtractFrom")]
        System.Threading.Tasks.Task SubtractFromAsync(double n);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ICalculatorDuplex/MultiplyBy")]
        void MultiplyBy(double n);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ICalculatorDuplex/MultiplyBy")]
        System.Threading.Tasks.Task MultiplyByAsync(double n);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ICalculatorDuplex/DivideBy")]
        void DivideBy(double n);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ICalculatorDuplex/DivideBy")]
        System.Threading.Tasks.Task DivideByAsync(double n);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculatorDuplex/ModifyStudent", ReplyAction="http://tempuri.org/ICalculatorDuplex/ModifyStudentResponse")]
        GettingStartedClient.ServiceReference1.Student ModifyStudent(GettingStartedClient.ServiceReference1.Student stu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculatorDuplex/ModifyStudent", ReplyAction="http://tempuri.org/ICalculatorDuplex/ModifyStudentResponse")]
        System.Threading.Tasks.Task<GettingStartedClient.ServiceReference1.Student> ModifyStudentAsync(GettingStartedClient.ServiceReference1.Student stu);
        
        // CODEGEN: 消息 GetAirfareRequest 的包装名称(GetAirfareRequest)以后生成的消息协定与默认值(GetAirfare)不匹配
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculatorDuplex/GetAirfare", ReplyAction="http://tempuri.org/ICalculatorDuplex/GetAirfareResponse")]
        GettingStartedClient.ServiceReference1.GetAirfareResponse GetAirfare(GettingStartedClient.ServiceReference1.GetAirfareRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculatorDuplex/GetAirfare", ReplyAction="http://tempuri.org/ICalculatorDuplex/GetAirfareResponse")]
        System.Threading.Tasks.Task<GettingStartedClient.ServiceReference1.GetAirfareResponse> GetAirfareAsync(GettingStartedClient.ServiceReference1.GetAirfareRequest request);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICalculatorDuplexCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ICalculatorDuplex/Equals")]
        void Equals(double result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ICalculatorDuplex/Equation")]
        void Equation(string eqn);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ICalculatorDuplex/ShowStu")]
        void ShowStu(GettingStartedClient.ServiceReference1.Student stu);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddTo", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class AddToRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public double n;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int AddStr;
        
        public AddToRequest() {
        }
        
        public AddToRequest(double n, int AddStr) {
            this.n = n;
            this.AddStr = AddStr;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddToResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class AddToResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string AddToResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string Extra;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public int AddStr;
        
        public AddToResponse() {
        }
        
        public AddToResponse(string AddToResult, string Extra, int AddStr) {
            this.AddToResult = AddToResult;
            this.Extra = Extra;
            this.AddStr = AddStr;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAirfareRequest", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetAirfareRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public System.DateTime date;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string Data;
        
        public GetAirfareRequest() {
        }
        
        public GetAirfareRequest(System.DateTime date, string Data) {
            this.date = date;
            this.Data = Data;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAirfareResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetAirfareResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string Content;
        
        public GetAirfareResponse() {
        }
        
        public GetAirfareResponse(string Content) {
            this.Content = Content;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICalculatorDuplexChannel : GettingStartedClient.ServiceReference1.ICalculatorDuplex, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CalculatorDuplexClient : System.ServiceModel.DuplexClientBase<GettingStartedClient.ServiceReference1.ICalculatorDuplex>, GettingStartedClient.ServiceReference1.ICalculatorDuplex {
        
        public CalculatorDuplexClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public CalculatorDuplexClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public CalculatorDuplexClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public CalculatorDuplexClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public CalculatorDuplexClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void Clear() {
            base.Channel.Clear();
        }
        
        public System.Threading.Tasks.Task ClearAsync() {
            return base.Channel.ClearAsync();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GettingStartedClient.ServiceReference1.AddToResponse GettingStartedClient.ServiceReference1.ICalculatorDuplex.AddTo(GettingStartedClient.ServiceReference1.AddToRequest request) {
            return base.Channel.AddTo(request);
        }
        
        public string AddTo(double n, ref int AddStr, out string Extra) {
            GettingStartedClient.ServiceReference1.AddToRequest inValue = new GettingStartedClient.ServiceReference1.AddToRequest();
            inValue.n = n;
            inValue.AddStr = AddStr;
            GettingStartedClient.ServiceReference1.AddToResponse retVal = ((GettingStartedClient.ServiceReference1.ICalculatorDuplex)(this)).AddTo(inValue);
            Extra = retVal.Extra;
            AddStr = retVal.AddStr;
            return retVal.AddToResult;
        }
        
        public System.Threading.Tasks.Task<GettingStartedClient.ServiceReference1.AddToResponse> AddToAsync(GettingStartedClient.ServiceReference1.AddToRequest request) {
            return base.Channel.AddToAsync(request);
        }
        
        public void SubtractFrom(double n) {
            base.Channel.SubtractFrom(n);
        }
        
        public System.Threading.Tasks.Task SubtractFromAsync(double n) {
            return base.Channel.SubtractFromAsync(n);
        }
        
        public void MultiplyBy(double n) {
            base.Channel.MultiplyBy(n);
        }
        
        public System.Threading.Tasks.Task MultiplyByAsync(double n) {
            return base.Channel.MultiplyByAsync(n);
        }
        
        public void DivideBy(double n) {
            base.Channel.DivideBy(n);
        }
        
        public System.Threading.Tasks.Task DivideByAsync(double n) {
            return base.Channel.DivideByAsync(n);
        }
        
        public GettingStartedClient.ServiceReference1.Student ModifyStudent(GettingStartedClient.ServiceReference1.Student stu) {
            return base.Channel.ModifyStudent(stu);
        }
        
        public System.Threading.Tasks.Task<GettingStartedClient.ServiceReference1.Student> ModifyStudentAsync(GettingStartedClient.ServiceReference1.Student stu) {
            return base.Channel.ModifyStudentAsync(stu);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GettingStartedClient.ServiceReference1.GetAirfareResponse GettingStartedClient.ServiceReference1.ICalculatorDuplex.GetAirfare(GettingStartedClient.ServiceReference1.GetAirfareRequest request) {
            return base.Channel.GetAirfare(request);
        }
        
        public string GetAirfare(System.DateTime date, string Data) {
            GettingStartedClient.ServiceReference1.GetAirfareRequest inValue = new GettingStartedClient.ServiceReference1.GetAirfareRequest();
            inValue.date = date;
            inValue.Data = Data;
            GettingStartedClient.ServiceReference1.GetAirfareResponse retVal = ((GettingStartedClient.ServiceReference1.ICalculatorDuplex)(this)).GetAirfare(inValue);
            return retVal.Content;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<GettingStartedClient.ServiceReference1.GetAirfareResponse> GettingStartedClient.ServiceReference1.ICalculatorDuplex.GetAirfareAsync(GettingStartedClient.ServiceReference1.GetAirfareRequest request) {
            return base.Channel.GetAirfareAsync(request);
        }
        
        public System.Threading.Tasks.Task<GettingStartedClient.ServiceReference1.GetAirfareResponse> GetAirfareAsync(System.DateTime date, string Data) {
            GettingStartedClient.ServiceReference1.GetAirfareRequest inValue = new GettingStartedClient.ServiceReference1.GetAirfareRequest();
            inValue.date = date;
            inValue.Data = Data;
            return ((GettingStartedClient.ServiceReference1.ICalculatorDuplex)(this)).GetAirfareAsync(inValue);
        }
    }
}
